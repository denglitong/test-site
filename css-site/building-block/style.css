/*
1.层叠（顺序）
2.优先级（#id > .class > element）
3.继承（有些属性默认继承，有些属性不会继承；哪些属性可以默认继承很大程度上是由常识决定的）
*/

/*
1.重要程度
2.优先级
    内联属性 >> ID选择器 >> 类选择器/属性选择器/伪类选择器 >> 元素选择器/伪元素选择器
3.资源顺序

!important 可覆盖上述所有的优先级，不过需要很小心的使用

*/

/* CSS选择器 */
/*类型选择器*/
h1 {}
/*类选择器*/
.box {}
/*ID选择器*/
#unique {}
/*属性选择器*/
a[title] {}
a[href="https://example.com"] {}
/*伪类选择器*/
a:hover {}
p:first-child
/*伪元素选择器*/
p::first-line {}
/*后代选择器*/
h1 p {
    color: darkorchid;
}
/*子代选择器*/
h1 > p {
    /*子代选择器和后代选择器是一样的*/
    /*color: black;*/
    font-style: italic;
}
/*相邻兄弟选择器*/
h1 + p {
    background-color: #97DB9A;
}
/*通用兄弟选择器*/
h1 ~ p {
    border: 1px solid red;
}

/* article 下的第一个子元素，不管它是什么元素 */
article :first-child {}
/* 作为其他元素的第一个子元素的article元素 */
article:first-child {}
/* 明确表达，避免混淆：article 下的第一个子元素 */
article *:first-child {}

.class {}
element.class {}

/* class1 && class2 标记的元素 */
.class1.class2 {}

#id {}
element#id {}

/* 使用 class 比 ID 好 */

/*
属性选择器
[attr]  a[title]
[attr=value]    a[href="https://example.com"]
[attr~=value]   p[class~="special"] <p class="special anyothers">
[attr|=value]   div[lang|="zh"] <div lang="zh"> or <div lang="zh-somethings">
[attr^=value]   li[class^="box-"]
[attr$=value]   li[class$="-box"]
[attr*=value]   li[class*="box"]
[attr some_rules i]     li[class^="a" i] 大小写不敏感
*/

/*

伪类选择器：用于选择处于特定状态的元素，就像是你为它们加入了类一样
:first-child
:last-child
:only-child 匹配没有任何兄弟元素的子元素
:invalid 表示任意内容未通过验证的<input>元素或<form>元素
:valid 匹配诸如<input>元素的处于可用的元素
:default
:dir
:disabled
:empty
:first-of-type
:link 匹配未曾访问的链接
:visited 匹配已访问链接
:optional 匹配不是必填的 form 元素
:required 匹配必填的 form 元素
:read-only 匹配用户不可更改的元素
:read-write 匹配用户可更改的元素

用户行为伪类/动态伪类
:hover
:focus
:focus-visible
:focus-within
:active
:any-link
:blank
:checked
:current


伪元素：与伪类相似，表现地像你往标记文本中加入全新的HTML元素一样，然后再向这些元素应用样式
::first-line    article p:first-child::first-line article下的第一个p的第一个行
::before(content:)
::after(content:)
::first-letter 匹配元素的第一个字母
::first-line 匹配包含次伪元素的第一行
::selection 匹配文档中被选择的那部分
::grammar-error 匹配文档中包含了浏览器标记的语法错误的那部分
::spelling-error 匹配文档中包含了浏览器标记的拼写错误的那部分

*/